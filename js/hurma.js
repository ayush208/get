const HURMA_API_KEY="176458f06e6363b3540ec2197df39d7f2f42a1c0a3c82d0c59f6082cc1f079ce6a41d5abb3c4b4d";function getVacancies(){fetch("https://uinno.io/api/vacancies",{method:"GET"}).then(n=>n.json()).then(n=>{n.result.data.forEach(n=>{appendVacancy(generateVacancy(n),"vacanciesRow")})}).catch(n=>{(new Notification).show(n,5e3)})}function generateVacancy(n){const a=n.description.split(" ",17).join(" ")+"...",e=Array.isArray(n.salary)?"Based on the Interview":`${n.salary.from}$ - ${n.salary.to}$`;return createHtmlTag(`<div class="col-12 col-lg-6 vacancy-col">\n  <button class="vacancy-item" onclick="redirectVacancy(${n.id})">\n    <div class="vacancy-body">\n        <div class="vacancy-body-salary">${e}</div>\n        <div class="vacancy-body-title">\n            <h4>${n.name}</h4>\n        </div>\n        <div class="vacancy-body-description">\n            <p>${a}</p>\n        </div>\n        <div class="vacancy-body-btn">\n            <a class="btn magnet" href="/careers/view/#${n.id}" tabindex="-1">more</a>\n        </div>\n    </div>\n    <div class="vacancy-image">\n      <img src="/assets/images/vacancies/items/vacancy-${n.id}.jpg" alt="${n.name}">\n    </div>\n  </button>\n</div>`)}function appendVacancy(n,a){document.getElementById(a).appendChild(n)}function getVacancyById(n,a){fetch("https://uinno.io/api/vacancies/"+n,{method:"GET"}).then(n=>n.json()).then(n=>{renderVacancy(n.result),hideLoader(),a()}).catch(n=>{window.location.href="/careers"})}function renderVacancy(n){[{data:n.name,id:"title"},{data:n.residence,id:"residence"},{data:Array.isArray(n.salary)?"Based on the Interview":`${n.salary.from}$ - ${n.salary.to}$`,id:"salary"}].map(n=>{fillBlock(n.id,n.data)}),setDescription(n.description.split("\n"),"description"),setLists(n.addition,"pluses"),setLists(n.demand,"skills"),setLists(n.working_conditions,"offer")}function setDescription(n,a){const e=document.getElementById(a);n.forEach(n=>{const a=createHtmlTag(`<p>${n}</p>`);e.appendChild(a)})}function setLists(n,a){let e=n.split("\n");for(let n=0;n<e.length;n++)e[n]=filterItem(e[n]);const t=document.getElementById(a);e.forEach(n=>{if(!n)return;const a=createHtmlTag(`\n      <div>\n          <img src="/assets/icons/done.svg" alt="mark">\n          <span>${n}</span>\n      </div>`);t.appendChild(a)})}function filterItem(n){return n.replace(/(?!\w)(?!\s)(?!;)./gi,"").trim()}function fillBlock(n,a){document.getElementById(n).innerText=a}function getSingleVacancyByUrl(n){const a=window.location.hash.substr(1,window.location.hash.length-1);a?getVacancyById(a,n):window.location.href="/careers"}function sendVacancy(n){const a=new FormData;a.append("name",n.name),a.append("email",n.email),a.append("phone",n.phone),a.append("cv",n.cv);const e=new URLSearchParams(window.location.search).get("id");null!==e&&a.append("hurma_vacancy_id",e),fetch("https://uinno.hurma.work/api/v1/candidate",{method:"POST",headers:{token:HURMA_API_KEY},body:a}).then(n=>n.json()).then(a=>{a.error?(new Notification).show("CV was not send",5e3,"retry",sendVacancy.bind(n)):((new Notification).show("CV was send",5e3),clearForm("cv-form"))}).catch(a=>{console.log("error",a),(new Notification).show("CV was not sent.",5e3,"retry",sendVacancy.bind(null,n))})}function hideLoader(){document.getElementById("loader").classList.add("d-none")}